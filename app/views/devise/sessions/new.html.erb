<%= form_for(resource, as: resource_name, url: session_path(resource_name), html: { class: "login-form-content" }) do |f| %>
  <% if alert %>
    <div class="alert alert-danger">
      <strong>‚ö†Ô∏è L·ªói:</strong> <%= alert %>
    </div>
  <% end %>
  
  <% if notice %>
    <div class="alert alert-notice">
      <strong>‚ÑπÔ∏è Th√¥ng b√°o:</strong> <%= notice %>
    </div>
  <% end %>

  <div class="form-group">
    <%= f.label :email, "üìß Email" %>
    <%= f.email_field :email, 
        autofocus: true, 
        autocomplete: "email", 
        class: "form-input",
        placeholder: "Nh·∫≠p email c·ªßa b·∫°n",
        required: true %>
  </div>

  <div class="form-group">
    <%= f.label :password, "üîí M·∫≠t kh·∫©u" %>
    <%= f.password_field :password, 
        autocomplete: "current-password", 
        class: "form-input",
        placeholder: "Nh·∫≠p m·∫≠t kh·∫©u",
        required: true %>
  </div>

  <% if devise_mapping.rememberable? %>
    <div class="remember-me">
      <%= f.check_box :remember_me %>
      <%= f.label :remember_me, "Ghi nh·ªõ ƒëƒÉng nh·∫≠p" %>
    </div>
  <% end %>

  <div class="form-group">
    <%= f.submit "üöÄ ƒêƒÉng nh·∫≠p", class: "login-button" %>
  </div>
<% end %>

<style>
  .login-form-content {
    width: 100%;
  }
  
  .form-group:last-child {
    margin-bottom: 0;
  }
  
  /* Animation cho form */
  .form-group {
    animation: slideInUp 0.6s ease-out forwards;
    opacity: 0;
    transform: translateY(20px);
  }
  
  .form-group:nth-child(1) { animation-delay: 0.1s; }
  .form-group:nth-child(2) { animation-delay: 0.2s; }
  .form-group:nth-child(3) { animation-delay: 0.3s; }
  .form-group:nth-child(4) { animation-delay: 0.4s; }
  
  @keyframes slideInUp {
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  /* Loading state cho button */
  .login-button:disabled {
    opacity: 0.7;
    cursor: not-allowed;
    transform: none !important;
  }
  
  .login-button:disabled::before {
    display: none;
  }
  
  /* Focus states */
  .form-input:focus + label,
  .form-input:not(:placeholder-shown) + label {
    color: #2D6294;
  }
  
  /* Error states */
  .field_with_errors .form-input {
    border-color: #dc2626;
    background: #fef2f2;
  }
  
  .field_with_errors label {
    color: #dc2626;
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const form = document.querySelector('.login-form-content');
    const submitButton = document.querySelector('.login-button');
    
    if (form && submitButton) {
      form.addEventListener('submit', function() {
        submitButton.disabled = true;
        submitButton.textContent = '‚è≥ ƒêang ƒëƒÉng nh·∫≠p...';
      });
    }
    
    // Auto-focus on email field
    const emailField = document.querySelector('input[type="email"]');
    if (emailField) {
      emailField.focus();
    }
    
    // Add enter key support
    document.addEventListener('keypress', function(e) {
      if (e.key === 'Enter') {
        const form = document.querySelector('.login-form-content');
        if (form) {
          form.submit();
        }
      }
    });
  });
</script>
